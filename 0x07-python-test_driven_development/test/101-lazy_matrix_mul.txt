The ``101-lazy_matrix_mul`` module
======================

Using ``lazy_matrix_mul``
-------------------

This is the test file for the 101-lazy_matrix_mul function
``lazy_matrix_mul`` from the ``101-lazy_matrix_mul`` module:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Test with empty matrix:

    >>> lazy_matrix_mul([[]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (1,0) not aligned: 0 (dim 1) != 1 (dim 0)

    >>> lazy_matrix_mul()
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

    >>> lazy_matrix_mul([[1, 2]])
    Traceback (most recent call last):
    ...
    TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])

    >>> lazy_matrix_mul([[5, 5]], [[2, 2], [3, 2]])
    array([[25, 20]])

    >>> lazy_matrix_mul([[1, 4, 6]], [[2, 5, 7], [3, 8, 9]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,3) and (2,3) not aligned: 3 (dim 1) != 2 (dim 0)

    >>> lazy_matrix_mul([[14, 44, 64]], [[24, 34], [45, 48], [70, 9]])
    array([[6796, 3164]])

    >>> lazy_matrix_mul([[21, 22]], [[32, 42], [52, 26]])
    array([[1816, 1454]])

m_a is not a list

    >>> lazy_matrix_mul('a', [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul(1, [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

m_b is not a list


    >>> lazy_matrix_mul([[1, 2], [3, 4]], 5)
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

    >>> lazy_matrix_mul([[1, 2], [3, 4]], "hola")
    Traceback (most recent call last):
    ...
    ValueError: Scalar operands are not allowed, use '*' instead

m_a is not a list of list.

    >>> lazy_matrix_mul([2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

    >>> lazy_matrix_mul(["happy"], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,) and (2,2) not aligned: 1 (dim 0) != 2 (dim 0)

m_b is not a list of list.

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [2])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [(2, 3)])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

empty m_a

    >>> lazy_matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (0,) and (2,2) not aligned: 0 (dim 0) != 2 (dim 0)

    >>> lazy_matrix_mul([[]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

empty m_b

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

test with no num:

    >>> lazy_matrix_mul([['a', 2]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([[4, 2]], [[3, 4], [5, "hola"]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

    >>> lazy_matrix_mul([['a', 2]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    ...
    TypeError: invalid data type for einsum

different rows m_a

    >>> lazy_matrix_mul([[1, 2], [3]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1, 2], [3, 3, 4]], [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

different rows m_b

    >>> lazy_matrix_mul([[1, 2], [3, 5]], [[1, 2, 5], [3, 4]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

    >>> lazy_matrix_mul([[1, 2], [3, 5]], [[1, 2, 5], [3, 4, 8, 6]])
    Traceback (most recent call last):
    ...
    ValueError: setting an array element with a sequence.

can't be multiplied

    >>> lazy_matrix_mul([[1,3]], [[1, 2, 5, 9, 10], [3, 4, 6, 7, 8], [3, 4, 6, 7, 8]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (1,2) and (3,5) not aligned: 2 (dim 1) != 3 (dim 0)

    >>> lazy_matrix_mul([[1, 2, 5, 9, 10], [3, 4, 6, 7, 8], [3, 4, 6, 7, 8]], [[1,3]])
    Traceback (most recent call last):
    ...
    ValueError: shapes (3,5) and (1,2) not aligned: 5 (dim 1) != 1 (dim 0)

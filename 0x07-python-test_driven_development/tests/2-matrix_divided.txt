The ``2-matrix_divide`` module
======================

Using ``matrix_divided``
-------------------

test for a function that divides a matrix by a integer
``matrix_divided`` from the `2-matrix_divide`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing null matrix:

    >>> matrix_divided(None, 0)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a list:

    >>> matrix_divided([1, 2, 3], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a matrix without number:

    >>> matrix_divided([[2, 1, 3], [1, 5, 'a']], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided([[[2], 1, 3], [1, 5, 0]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a weird div:
    >>> matrix_divided([[2, 1, 3], [1, 5, 2]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[2, 1, 3], [1, 5, 2]], [2])
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix_divided([[2, 1, 3], [1, 5, 2]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Ok cases:

    >>> matrix = [[2, 2, 2],[2, 2, -2]]
    >>> matrix_divided(matrix, 2)
    [[1.0, 1.0, 1.0], [1.0, 1.0, -1.0]]

    >>> matrix = [[100, 50, 25],[1000, 500, 50]]
    >>> matrix_divided(matrix, 5)
    [[20.0, 10.0, 5.0], [200.0, 100.0, 10.0]]

    >>> matrix = [[100, 50, 25],[1000, 500, 50]]
    >>> matrix_divided(matrix, 1)
    [[100.0, 50.0, 25.0], [1000.0, 500.0, 50.0]]

    >>> matrix = [[25.5, 30.2, 4.2],[15, 1, 0.5]]
    >>> matrix_divided(matrix, 2.5)
    [[10.2, 12.08, 1.68], [6.0, 0.4, 0.2]]
